{"version":3,"sources":["components/cat_shop.js","components/basket.js","App.js","reportWebVitals.js","index.js"],"names":["Catshop","catData","to_buy","setTo_buy","className","map","cat","src","url","alt","name","price","onClick","storedTo_buy","buyInfo","pic","push","addHandler","Basket","total","setTotal","num","index","length","parseFloat","tobuy","splice","removeHandler","App","faker","require","useState","setCatData","setLoading","error","message","setError","getpic","a","fetch","response","status","Error","json","data","fakerinfo","newData","firstName","commerce","useEffect","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ddd7f69.chunk.js","sourcesContent":["import './../App.css';\n\nconst Catshop = ({catData, to_buy, setTo_buy} )=> {\n    const addHandler = (cat) => {\n        let storedTo_buy = [...to_buy]\n        let buyInfo = {\n            pic: cat.url,\n            name: cat.name,\n            price: cat.price\n        }\n        storedTo_buy.push(buyInfo)\n        setTo_buy(storedTo_buy)\n    }\n    return(\n        <div className='display'>\n            <h1>Cat4Life</h1>\n            {catData.map((cat) => {\n                return(\n                    <div className=\"card\">\n                        <img src={cat.url} alt='no pic'/>\n                        <div className='para'>\n                            <p>{cat.name}</p>\n                            <p>£{cat.price}</p>\n                        </div>\n                        <button onClick={() => addHandler(cat)} data-testid=\"button\">Add</button>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Catshop","const Basket = ({to_buy, setTo_buy, total ,setTotal}) =>{\n    \n    const removeHandler = (index) => {\n        let storedTo_buy = [...to_buy]\n        storedTo_buy.splice(index, 1)\n        setTo_buy(storedTo_buy)\n    }\n    const mytotal = () => {\n        let num = 0\n        for (let index = 0; index < to_buy.length; index++) {\n            num = num + parseFloat(to_buy[index].price);\n      }\n      return num\n    }\n\n    setTotal(mytotal)\n\n        \n    return(\n        <div className=\"display\"> \n            {to_buy.map((tobuy, index) => {\n                return(\n                    <div className=\"card\">\n                        <img src={tobuy.pic} alt='no pic'/>\n                        <div className='para'>\n                            <p>{tobuy.name}</p>\n                            <p>£{tobuy.price}</p>\n                        </div>\n                        <button onClick={()=>removeHandler(index)}>remove</button>\n                    </div>\n                )\n                \n            })}\n            <h5>Total to pay = £{total}</h5>\n\n        </div>\n        \n    )\n}\n\nexport default Basket","import { useEffect, useState } from 'react';\nimport React from 'react';\nimport './App.css';\nimport Catshop from './components/cat_shop';\nimport Basket from './components/basket';\nimport { \n  BrowserRouter as Router, \n  Routes, \n  Route, \n  Link \n} from \"react-router-dom\"\n\n\nfunction App() {\n  const faker = require('faker')  \n  const [total,setTotal] = useState(0.00)\n  const [catData, setCatData] = useState([\"\"])\n  const [to_buy, setTo_buy] = useState([])\n  const [loading, setLoading] = useState(false)\n\n    const [error, setError] = useState({\n      error: false,\n      message: \"\"\n    })\n\n  const getpic = async () => {\n    try {\n      setLoading(true)\n      const response = await fetch(`https://api.thecatapi.com/v1/images/search?limit=10`)\n      if (response.status !== 200){\n        throw new Error(\"Not Working\")\n      }\n      const data = await response.json()\n      const newData = await fakerinfo(data)\n      setCatData(newData)\n      setLoading(false)\n      } catch (error){\n        setError({error: true, message: error.message})\n      }\n    }\n  \n\n  const fakerinfo = (data) =>{\n    {data.map((data) => {\n      data.name = faker.name.firstName()\n      data.price = faker.commerce.price()\n    })}\n    return data\n  }\n\n  useEffect(()=> {\n    getpic()\n  }, [])\n\n  // for (let index = 0; index < to_buy.length; index++) {\n  //     setTotal(total + to_buy[index].price) \n  // }\n\n  if(!catData){\n    return null\n  }\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/basket\">Basket</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <div>  \n        <Routes>\n          <Route path=\"/basket\" element={<Basket to_buy={to_buy} setTo_buy={setTo_buy} total={total} setTotal={setTotal} />}/>\n          <Route path=\"/\" element={<Catshop catData={catData} to_buy={to_buy} setTo_buy={setTo_buy}/>}/>\n        </Routes>\n      </div>\n    </Router>\n   \n  )\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}